    import string
    ...
    def test_format_keyword_arguments(self):
        fmt = string.Formatter()
        self.assertEqual(fmt.format("{arg}", arg='test'), '-test-')
        self.assertRaises(KeyError, fmt.format, "-{arg}-")
        self.assertEqual(fmt.format("-{self}-", self='test'), '-test-')
        self.assertRaises(KeyError, fmt.format, "-{self}-")
        self.assertEqual(fmt.format("-{format_string}-", format_string='test'),
                         '-test-')
        self.assertRaises(KeyError, fmt.format, "-{format_string}-")
        with self.assertRaisesRegex(TypeError, "format_string"):
            fmt.format(format_string="-{arg}-", arg='test')

===

Consider the following test of the Python Standard Library, version 3.10: 

```
    import string
    ...
    def test_format_keyword_arguments(self):
        fmt = string.Formatter()
        self.assertEqual(fmt.format("{arg}", arg='test'), '-test-')
        self.assertRaises(KeyError, fmt.format, "-{arg}-")
        self.assertEqual(fmt.format("-{self}-", self='test'), '-test-')
        self.assertRaises(KeyError, fmt.format, "-{self}-")
        self.assertEqual(fmt.format("-{format_string}-", format_string='test'),
                         '-test-')
        self.assertRaises(KeyError, fmt.format, "-{format_string}-")
        with self.assertRaisesRegex(TypeError, "format_string"):
            fmt.format(format_string="-{arg}-", arg='test')
```

Your job is to figure out whether this test will pass or fail.
If it fails, provide the rationale.

===

Let's analyze the given test one line at a time:

1. The test creates an instance of `string.Formatter()`.
2. The test checks if `fmt.format("{arg}", arg='test')` equals '-test-'. Given the format string and the keyword argument, this will actually produce the string 'test' and not '-test-', so this assertion will fail.
3. It then checks for a `KeyError` exception when calling `fmt.format("-{arg}-")`. Since the `arg` keyword is not provided, this will indeed raise a `KeyError`, so this assertion will pass.
4. The test checks if `fmt.format("-{self}-", self='test')` equals '-test-'. This will produce the output '-test-', so this assertion will pass.
5. Again, it checks for a `KeyError` exception when calling `fmt.format("-{self}-")`. This will indeed raise a `KeyError`, so this assertion will pass.
6. The test checks if `fmt.format("-{format_string}-", format_string='test')` equals '-test-'. This will produce the output '-test-', so this assertion will pass.
7. It then checks for a `KeyError` exception when calling `fmt.format("-{format_string}-")`. This will indeed raise a `KeyError`, so this assertion will pass.
8. Lastly, it checks for a `TypeError` with the string "format_string" in its message when calling `fmt.format(format_string="-{arg}-", arg='test')`. This call should raise a `TypeError` since `format_string` is a reserved keyword argument for `fmt.format()` method. So, this assertion will also pass.

In summary, the test will fail due to the second line:
```
self.assertEqual(fmt.format("{arg}", arg='test'), '-test-')
```

The expected value is '-test-', but the actual value will be 'test'.